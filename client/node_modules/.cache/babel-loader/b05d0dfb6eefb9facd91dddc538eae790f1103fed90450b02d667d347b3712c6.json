{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\balab\\\\OneDrive\\\\Desktop\\\\mernfood\\\\MERN-FOOD\\\\client\\\\src\\\\components\\\\cursor.js\",\n  _s = $RefreshSig$();\n// Cursor.js\nimport React, { useEffect, useState, useRef } from 'react';\nimport './cursor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cursor() {\n  _s();\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [shadowOffset, setShadowOffset] = useState({\n    x: -20,\n    y: -20\n  });\n  const prevPositionRef = useRef({\n    x: 120000,\n    y: 120000\n  });\n  const shadowOffsetRef = useRef(shadowOffset);\n  useEffect(() => {\n    const updateMousePosition = e => {\n      const newX = e.clientX;\n      const newY = e.clientY;\n      const deltaX = newX - prevPositionRef.current.x;\n      const deltaY = newY - prevPositionRef.current.y;\n\n      // Calculate the distance between the cursor and the shadow\n      const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n      // Move the shadow 10000 times more away from the cursor\n      const newShadowOffset = {\n        x: shadowOffsetRef.current.x - deltaX * 1000000 / distance,\n        y: shadowOffsetRef.current.y - deltaY * 1000000 / distance\n      };\n\n      // Update the cursor position\n      setPosition({\n        x: newX,\n        y: newY\n      });\n\n      // Save the current position for the next update\n      prevPositionRef.current.x = newX;\n      prevPositionRef.current.y = newY;\n\n      // Set the shadow offset with a slight delay for better animation\n      setTimeout(() => {\n        setShadowOffset(newShadowOffset);\n        shadowOffsetRef.current = newShadowOffset; // Update the ref for the next iteration\n      }, 0);\n    };\n    window.addEventListener('mousemove', updateMousePosition);\n    return () => {\n      window.removeEventListener('mousemove', updateMousePosition);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cursor\",\n    style: {\n      left: `${position.x}px`,\n      top: `${position.y}px`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cursor-shadow\",\n      style: {\n        left: `calc(${position.x}px + ${shadowOffset.x}px)`,\n        top: `calc(${position.y}px + ${shadowOffset.y}px)`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cursor-inner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Cursor, \"9s9WctcZa1wXZhdutUKoe8+GN30=\");\n_c = Cursor;\nvar _c;\n$RefreshReg$(_c, \"Cursor\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","Cursor","_s","position","setPosition","x","y","shadowOffset","setShadowOffset","prevPositionRef","shadowOffsetRef","updateMousePosition","e","newX","clientX","newY","clientY","deltaX","current","deltaY","distance","Math","sqrt","newShadowOffset","setTimeout","window","addEventListener","removeEventListener","className","style","left","top","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/balab/OneDrive/Desktop/mernfood/MERN-FOOD/client/src/components/cursor.js"],"sourcesContent":["// Cursor.js\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport './cursor.css';\r\n\r\nexport default function Cursor() {\r\n  const [position, setPosition] = useState({ x: 0, y: 0 });\r\n  const [shadowOffset, setShadowOffset] = useState({ x: -20, y: -20 });\r\n  const prevPositionRef = useRef({ x: 120000, y: 120000 });\r\n  const shadowOffsetRef = useRef(shadowOffset);\r\n\r\n  useEffect(() => {\r\n    const updateMousePosition = (e) => {\r\n      const newX = e.clientX;\r\n      const newY = e.clientY;\r\n\r\n      const deltaX = newX - prevPositionRef.current.x;\r\n      const deltaY = newY - prevPositionRef.current.y;\r\n\r\n      // Calculate the distance between the cursor and the shadow\r\n      const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\r\n\r\n      // Move the shadow 10000 times more away from the cursor\r\n      const newShadowOffset = {\r\n        x: shadowOffsetRef.current.x - deltaX * 1000000 / distance,\r\n        y: shadowOffsetRef.current.y - deltaY * 1000000 / distance,\r\n      };\r\n\r\n      // Update the cursor position\r\n      setPosition({ x: newX, y: newY });\r\n\r\n      // Save the current position for the next update\r\n      prevPositionRef.current.x = newX;\r\n      prevPositionRef.current.y = newY;\r\n\r\n      // Set the shadow offset with a slight delay for better animation\r\n      setTimeout(() => {\r\n        setShadowOffset(newShadowOffset);\r\n        shadowOffsetRef.current = newShadowOffset; // Update the ref for the next iteration\r\n      }, 0);\r\n    };\r\n\r\n    window.addEventListener('mousemove', updateMousePosition);\r\n\r\n    return () => {\r\n      window.removeEventListener('mousemove', updateMousePosition);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"cursor\" style={{ left: `${position.x}px`, top: `${position.y}px` }}>\r\n      <div\r\n        className=\"cursor-shadow\"\r\n        style={{\r\n          left: `calc(${position.x}px + ${shadowOffset.x}px)`,\r\n          top: `calc(${position.y}px + ${shadowOffset.y}px)`,\r\n        }}\r\n      ></div>\r\n      <div className=\"cursor-inner\"></div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}